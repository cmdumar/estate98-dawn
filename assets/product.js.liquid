const backdrop = document.querySelector('.backdrop')
const cartDrawer = document.querySelector('.cart-drawer')
const closeBtn = document.querySelector('.close-btn')
const shopNowBtn = document.querySelector('.shop-now')

closeBtn.addEventListener('click', closeCartDrawer )
backdrop.addEventListener('click', closeCartDrawer)

 function closeCartDrawer() {
    cartDrawer.classList.remove('open')
    backdrop.classList.remove('show')
}

function openCartDrawer() {
    cartDrawer.classList.add('open')
    backdrop.classList.add('show')
}

async function updateCartDrawer() {
   const res = await fetch('/?section_id=cart-drawer')
   const text = await res.text()
   const html = document.createElement('div')
   html.innerHTML = text
   const newBox = html.querySelector('.cart-content').innerHTML
   document.querySelector('.cart-content').innerHTML = newBox 
   updateCartQuantities()
}

updateCartQuantities()
//cart form submission

document.querySelectorAll('form[action="/cart/add"]').forEach(form => {
    form.addEventListener('submit', async e => {
        e.preventDefault()
        const res = await fetch("/cart/add", {
            method: 'post',
            body: new FormData(form),
        })
            //update cart
            await updateCartDrawer()

            //open cart
            openCartDrawer()

            updateCartQuantities()
    })
})

//update cart quantities

function updateCartQuantities() {

    document.querySelectorAll(".counter span").forEach((button) => {
      button.addEventListener("click", async () => {
        console.log('clicked')
        // Get line item key
        const rootItem = button.parentElement.parentElement.parentElement;
        const key = rootItem.getAttribute("data-line-item-key");
        console.log("key is", key)

        // Get new quantity
        const currentQuantity = Number(
          button.parentElement.querySelector("input").value
        );
        const isUp = button.classList.contains(
          "plus"
        );
        const newQuantity = isUp ? currentQuantity + 1 : currentQuantity - 1;

        // Ajax update\
        const res = await fetch("/cart/update.js", {
          method: "post",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ updates: { [key]: newQuantity } }),
        });
        const cart = await res.json();

        // Update cart
        updateCartDrawer();
      });
    });
}



//product detail section
mainImg = document.getElementById('MainImg')
smallImgs = document.getElementsByClassName('sec-img') || []

smallImgs[0].onclick = function() {
    mainImg.src = smallImgs[0].src
}

smallImgs[1].onclick = function() {
    mainImg.src = smallImgs[1].src
}

smallImgs[2].onclick = function() {
    mainImg.src = smallImgs[2].src
}

smallImgs[3].onclick = function() {
    mainImg.src = smallImgs[3].src
}

// tab

delivery = document.querySelector('.delivery')
oneTime = document.querySelector('.onetime')
month = document.querySelector('.month')

oneTime.onclick = function() {
    delivery.style.backgroundColor = 'white'
    delivery.style.color = 'black'
    oneTime.style.backgroundColor = 'black'
    oneTime.style.color = 'white'
    month.style.display = 'none'
}

delivery.onclick = function() {
    oneTime.style.backgroundColor = 'white'
    oneTime.style.color = 'black'
    delivery.style.backgroundColor = 'black'
    delivery.style.color = 'white'
    month.style.display = 'inline'
}

// quantity 
// qty = document.querySelector('.qty')
// plus = document.querySelector('.plus')
// minus = document.querySelector('.minus')
// price = parseInt(document.querySelector('.price').textContent)

// value = 1

// plus.onclick = () => {
//     if(value < 10) {
//         value++
//         qty.value = value
//         document.querySelector('.price').textContent = price*value.toString()
//     }
// }

// minus.onclick = () => {
//     if(value > 1) {
//         value--
//         qty.value = value
//         document.querySelector('.price').textContent = price*value.toString()
//     }
// }






